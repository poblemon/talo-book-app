export const ActivityBlock: {
    new (): {};
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const ActivityHeader: {
    new (): {};
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const BaseComponent: {
    new (): {};
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const Block: {
    new (): {};
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const BtnUi: {
    new (): {};
    observedAttributes: string[];
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const CameraSource: {
    new (): {};
    template: string;
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const CloudImageEditor: {
    new (): {};
    styleAttrs: any[];
    template: string;
    observedAttributes: string[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const CloudImageEditorActivity: {
    new (): {};
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const CloudImageEditorBlock: {
    new (): {};
    styleAttrs: any[];
    template: string;
    observedAttributes: string[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const Config: {
    new (): {};
    observedAttributes: string[];
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Copyright: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const CropFrame: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Data: {
    new (): {};
    warn: () => void;
    registerCtx: () => void;
    deleteCtx: () => void;
    getCtx: () => void;
    globalStore: {};
    apply: () => void;
    bind: () => void;
    call: () => void;
    toString: () => void;
    hasOwnProperty: () => void;
    isPrototypeOf: () => void;
    propertyIsEnumerable: () => void;
    valueOf: () => void;
    toLocaleString: () => void;
};
export const DropArea: {
    new (): {};
    styleAttrs: any[];
    template: string;
    observedAttributes: string[];
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const EditorCropButtonControl: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorFilterControl: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorImageCropper: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorImageFader: {
    new (): {};
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorOperationControl: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorScroller: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorSlider: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const EditorToolbar: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const ExternalSource: {
    new (): {};
    template: string;
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export namespace ExternalUploadSource {
    let FACEBOOK: string;
    let DROPBOX: string;
    let GDRIVE: string;
    let GPHOTOS: string;
    let FLICKR: string;
    let VK: string;
    let EVERNOTE: string;
    let BOX: string;
    let ONEDRIVE: string;
    let HUDDLE: string;
}
export const FileItem: {
    new (): {};
    template: string;
    activeInstances: {};
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const FileUploaderInline: {
    new (): {};
    styleAttrs: any[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const FileUploaderMinimal: {
    new (): {};
    styleAttrs: any[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const FileUploaderRegular: {
    new (): {};
    styleAttrs: any[];
    observedAttributes: string[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const FormInput: {
    new (): {};
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Icon: {
    new (): {};
    template: string;
    observedAttributes: string[];
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Img: {
    new (): {};
    observedAttributes: string[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const LineLoaderUi: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Modal: {
    new (): {};
    styleAttrs: any[];
    StateConsumerScope: string;
    template: string;
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export namespace ModalEvents {
    let ADD: string;
    let DELETE: string;
    let OPEN: string;
    let CLOSE: string;
    let CLOSE_ALL: string;
    let DESTROY: string;
}
export const PACKAGE_NAME: "blocks";
export const PACKAGE_VERSION: "1.18.0";
export const PresenceToggle: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const ProgressBar: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const ProgressBarCommon: {
    new (): {};
    template: string;
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Select: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const SimpleBtn: {
    new (): {};
    styleAttrs: any[];
    template: string;
    observedAttributes: string[];
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const SliderUi: {
    new (): {};
    template: string;
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const SolutionBlock: {
    new (): {};
    styleAttrs: any[];
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const SourceBtn: {
    new (): {};
    template: string;
    observedAttributes: string[];
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const SourceList: {
    new (): {};
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Spinner: {
    new (): {};
    template: string;
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const StartFrom: {
    new (): {};
    template: string;
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const Thumb: {
    new (): {};
    template: string;
    observedAttributes: string[];
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const UID: {
    new (): {};
    generate: () => void;
    apply: () => void;
    bind: () => void;
    call: () => void;
    toString: () => void;
    hasOwnProperty: () => void;
    isPrototypeOf: () => void;
    propertyIsEnumerable: () => void;
    valueOf: () => void;
    toLocaleString: () => void;
};
export const UploadCtxProvider: {
    new (): {};
    styleAttrs: any[];
    EventType: {
        FILE_ADDED: string;
        FILE_REMOVED: string;
        FILE_UPLOAD_START: string;
        FILE_UPLOAD_PROGRESS: string;
        FILE_UPLOAD_SUCCESS: string;
        FILE_UPLOAD_FAILED: string;
        FILE_URL_CHANGED: string;
        MODAL_OPEN: string;
        MODAL_CLOSE: string;
        DONE_CLICK: string;
        UPLOAD_CLICK: string;
        ACTIVITY_CHANGE: string;
        COMMON_UPLOAD_START: string;
        COMMON_UPLOAD_PROGRESS: string;
        COMMON_UPLOAD_SUCCESS: string;
        COMMON_UPLOAD_FAILED: string;
        CHANGE: string;
        GROUP_CREATED: string;
    };
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    is: string;
    bindAttributes: () => void;
};
export const UploadList: {
    new (): {};
    template: string;
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export namespace UploadSource {
    export let LOCAL: string;
    export let DROP_AREA: string;
    export let CAMERA: string;
    export let EXTERNAL: string;
    export let API: string;
    export let URL: string;
    export let DRAW: string;
    export let MOBILE_VIDEO_CAMERA: string;
    export let MOBILE_PHOTO_CAMERA: string;
    let FACEBOOK_1: string;
    export { FACEBOOK_1 as FACEBOOK };
    let DROPBOX_1: string;
    export { DROPBOX_1 as DROPBOX };
    let GDRIVE_1: string;
    export { GDRIVE_1 as GDRIVE };
    let GPHOTOS_1: string;
    export { GPHOTOS_1 as GPHOTOS };
    let FLICKR_1: string;
    export { FLICKR_1 as FLICKR };
    let VK_1: string;
    export { VK_1 as VK };
    let EVERNOTE_1: string;
    export { EVERNOTE_1 as EVERNOTE };
    let BOX_1: string;
    export { BOX_1 as BOX };
    let ONEDRIVE_1: string;
    export { ONEDRIVE_1 as ONEDRIVE };
    let HUDDLE_1: string;
    export { HUDDLE_1 as HUDDLE };
}
export const UploaderBlock: {
    new (): {};
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export const UrlSource: {
    new (): {};
    template: string;
    extSrcList: {
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    sourceTypes: {
        LOCAL: string;
        DROP_AREA: string;
        CAMERA: string;
        EXTERNAL: string;
        API: string;
        URL: string;
        DRAW: string;
        MOBILE_VIDEO_CAMERA: string;
        MOBILE_PHOTO_CAMERA: string;
        FACEBOOK: string;
        DROPBOX: string;
        GDRIVE: string;
        GPHOTOS: string;
        FLICKR: string;
        VK: string;
        EVERNOTE: string;
        BOX: string;
        ONEDRIVE: string;
        HUDDLE: string;
    };
    activities: {
        START_FROM: string;
        CAMERA: string;
        DRAW: string;
        UPLOAD_LIST: string;
        URL: string;
        CLOUD_IMG_EDIT: string;
        EXTERNAL: string;
    };
    reg: () => void;
    styleAttrs: any[];
    is: string;
    bindAttributes: () => void;
};
export function defineComponents(): void;
export function defineLocale(): void;
export function loadFileUploaderFrom(): void;
export function toKebabCase(): void;
//# sourceMappingURL=index.ssr.d.ts.map